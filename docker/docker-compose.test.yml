services:

  bitcoind:
    container_name: bitcoind
    image: lncm/bitcoind:v25.1
    volumes:
      - ../signer/tests/service-configs/bitcoin.conf:/data/.bitcoin/bitcoin.conf:ro
    restart: on-failure
    # For some reason, the CMD in the original Dockerfile is set to publish
    # events on zeromq, and it seems to interfere with the events that we
    # want to publish. So we overwrite the CMD by just setting the
    # -logtimestamps argument in the command here.
    command: ["-logtimestamps"]
    stop_grace_period: 10s
    ports:
      - 8333:8333
      - 8332:8332
      - 18443:18443
      - 18444:18444
      - 28332:28332
      - 28333:28333
    healthcheck:
      test: ["CMD-SHELL", "bitcoin-cli getblockcount"]
      interval: 3s
      timeout: 1s
      retries: 3

  postgres:
    image: postgres:16.3
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: signer
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=postgres --dbname=signer"]
      interval: 2s
      timeout: 1s
      retries: 5

  flyway:
    image: flyway/flyway:10.13.0
    command: >-
      -url=jdbc:postgresql://postgres:5432/signer
      -user=postgres
      -password=postgres
      -sqlMigrationPrefix=""
      -connectRetries=60
      migrate
    volumes:
      - ../signer/migrations:/flyway/sql
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - manual_start

  # DynamoDB Tables for the Emily API.
  emily-dynamodb:
    image: "amazon/dynamodb-local:latest"
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ."
    ports:
      - "8000:8000"

  # Modifies Emily's CDK template and creates DynamoDB Tables.
  emily-aws-setup:
    build:
      context: ../
      dockerfile: docker/sbtc/Dockerfile
      target: emily-aws-setup
    depends_on:
      - emily-dynamodb
    environment:
      - DYNAMODB_ENDPOINT=http://emily-dynamodb:8000

  # # Runs the Emily server.
  # emily-server:
  #   build:
  #     context: ../
  #     dockerfile: docker/sbtc/Dockerfile
  #     target: emily-server
  #   depends_on:
  #     emily-aws-setup:
  #       condition: service_completed_successfully
  #   environment:
  #     - DYNAMODB_ENDPOINT=http://emily-dynamodb:8000
  #     - AWS_ACCESS_KEY_ID=xxxxxxxxxxxx
  #     - AWS_SECRET_ACCESS_KEY=xxxxxxxxxxxx
  #     - AWS_REGION=us-west-2
  #     - PORT=3031
  #   ports:
  #     - "3031:3031"

  # Runs the sBTC signer.
  signer:
    build:
      context: ../
      dockerfile: docker/sbtc/Dockerfile
      target: signer
    entrypoint: "/bin/bash -c '/usr/local/bin/signer -c /signer-config.toml --migrate-db'"
    environment:
      RUST_LOG: info
      SIGNER_SIGNER__DB_ENDPOINT: postgresql://postgres:postgres@postgres-1:5432/signer
      SIGNER_SIGNER__PRIVATE_KEY: 41634762d89dfa09133a4a8e9c1378d0161d29cd0a9433b51f1e3d32947a73dc
      SIGNER_SIGNER__P2P__LISTEN_ON: tcp://0.0.0.0:4122
      SIGNER_SIGNER__P2P__SEEDS: tcp://sbtc-signer-2:4122,tcp://sbtc-signer-3:4122

  # Runs the blocklist client.
  blocklist-client:
    build:
      context: ../
      dockerfile: docker/sbtc/Dockerfile
      target: blocklist-client
    volumes:
      - "../../blocklist-client/src/config/default.toml:/src/config/default.toml"
    environment:
      BLOCKLIST_CLIENT__SERVER__HOST: 0.0.0.0
      BLOCKLIST_CLIENT__SERVER__PORT: 3032
      BLOCKLIST_CLIENT__risk_analysis__API_URL: xxxxx
      BLOCKLIST_CLIENT__RISK_ANALYSIS__API_KEY: xxxxx
    ports:
      - "3032:3032"
    # TODO(TBD): Add the environment variables or cli arguments that configure
    # the blocklist client.
