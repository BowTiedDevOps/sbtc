################################################################################
# Define test groups
################################################################################
[test-groups]
# Test group for integration tests that need to be run serially. Tests in this
# group will be run one at a time.
serial = { max-threads = 1 }
# Test group for heavy integration tests. We'll run them first since they take
# the longest (priority=100) and ensure they have 2 threads.
heavy = { max-threads = 4 }

################################################################################
# Apply the 'serial' test-group to all integration tests which need to be run
# serially. This is primarily tests which need to interact with Emily as it is
# not run using `testcontainers` at the moment.
################################################################################

# All integration tests in the 'sbtc' package. This is because at the moment
# `testcontainers` are in the `signer` package, which can't be referenced by
# `sbtc`.
[[profile.default.overrides]]
filter = 'package(sbtc) & kind(test)'
test-group = 'serial'

# All integration tests in the 'emily-handler' package as these interact with
# Emily.
[[profile.default.overrides]]
filter = 'package(emily-handler) & kind(test)'
test-group = 'serial'

# Due to the way that ZMQ works, it's possible for subscribers in tests to
# get messages from other tests' bitcoin core instances, so these need to be
# run serially.
[[profile.default.overrides]]
filter = 'package(signer) & kind(test) & test(/^zmq/)'
test-group = 'serial'
threads-required = 100  # Require all available threads = guaranteed to run "alone"

### For our heavier tests (e.g. 
[[profile.default.overrides]]
filter = """
package(signer) & kind(test) & (
    test(transaction_coordinator::skip_smart_contract_deployment_and_key_rotation_if_up_to_date)
    | test(transaction_coordinator::sign_bitcoin_transaction)
    | test(transaction_coordinator::sign_bitcoin_transaction_withdrawals)
    | test(transaction_coordinator::sign_bitcoin_transaction_multiple_locking_keys)
)
"""
test-group = 'heavy'
priority = 100          # Highest priority is 100 (-100..=100, default is 0)
threads-required = 2    # Give them two threads each